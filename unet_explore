{
  "last_node_id": 92,
  "last_link_id": 144,
  "nodes": [
    {
      "id": 1,
      "type": "LoadHFDataset",
      "pos": [
        -5545.7300000000005,
        1961.3799999999997
      ],
      "size": {
        "0": 315,
        "1": 58
      },
      "flags": {},
      "order": 0,
      "mode": 2,
      "outputs": [
        {
          "name": "HF_DATASET",
          "type": "HF_DATASET",
          "links": null,
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "LoadHFDataset"
      },
      "widgets_values": [
        "huggan/smithsonian_butterflies_subset"
      ]
    },
    {
      "id": 12,
      "type": "Text box",
      "pos": [
        -5136.329852294917,
        2102.159926147461
      ],
      "size": {
        "0": 400,
        "1": 200
      },
      "flags": {},
      "order": 1,
      "mode": 2,
      "outputs": [
        {
          "name": "STRING",
          "type": "STRING",
          "links": [
            9
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "Text box"
      },
      "widgets_values": [
        "E:\\story_squad\\sd_class_01\\model.pt"
      ]
    },
    {
      "id": 2,
      "type": "DDPMPipline",
      "pos": [
        -5158.3600000000015,
        1740.4199815368636
      ],
      "size": {
        "0": 315,
        "1": 82
      },
      "flags": {},
      "order": 2,
      "mode": 2,
      "outputs": [
        {
          "name": "DDPM_PL",
          "type": "DDPM_PL",
          "links": [
            2
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "DDPMPipline"
      },
      "widgets_values": [
        "E:\\story_squad\\sd_class_01\\model.pt",
        "cuda"
      ]
    },
    {
      "id": 6,
      "type": "TensorToImage",
      "pos": [
        -4508.3600000000015,
        1740.4199815368636
      ],
      "size": {
        "0": 220,
        "1": 60
      },
      "flags": {},
      "order": 42,
      "mode": 2,
      "inputs": [
        {
          "name": "tensor",
          "type": "TORCH_TENSOR",
          "link": 3
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            4
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "TensorToImage"
      },
      "widgets_values": [
        "BHWC"
      ]
    },
    {
      "id": 18,
      "type": "PreviewImage",
      "pos": [
        -4017.3325156250025,
        2660.947788281249
      ],
      "size": {
        "0": 210,
        "1": 26
      },
      "flags": {},
      "order": 71,
      "mode": 2,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 14
        }
      ],
      "properties": {
        "Node name for S&R": "PreviewImage"
      }
    },
    {
      "id": 5,
      "type": "SampleDDPMPipline",
      "pos": [
        -4758.3600000000015,
        1740.4199815368636
      ],
      "size": {
        "0": 210,
        "1": 82
      },
      "flags": {},
      "order": 30,
      "mode": 2,
      "inputs": [
        {
          "name": "model",
          "type": "DDPM_PL",
          "link": 2
        }
      ],
      "outputs": [
        {
          "name": "TORCH_TENSOR",
          "type": "TORCH_TENSOR",
          "links": [
            3
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "SampleDDPMPipline"
      },
      "widgets_values": [
        2,
        1000
      ]
    },
    {
      "id": 28,
      "type": "PreviewImage",
      "pos": [
        -5210,
        3350
      ],
      "size": {
        "0": 210,
        "1": 250
      },
      "flags": {},
      "order": 61,
      "mode": 0,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 31
        }
      ],
      "properties": {
        "Node name for S&R": "PreviewImage"
      }
    },
    {
      "id": 10,
      "type": "FuncAnysToImage",
      "pos": [
        -4686.7300000000005,
        2092.38
      ],
      "size": {
        "0": 410,
        "1": 310
      },
      "flags": {},
      "order": 29,
      "mode": 2,
      "inputs": [
        {
          "name": "any1",
          "type": "*",
          "link": 9
        },
        {
          "name": "any2",
          "type": "*",
          "link": null
        },
        {
          "name": "any3",
          "type": "*",
          "link": null
        },
        {
          "name": "any4",
          "type": "*",
          "link": null
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            7
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "FuncAnysToImage"
      },
      "widgets_values": [
        "import torch\nimport diffusers\nfrom diffusers import StableDiffusionPipeline\nfrom diffusers import DDPMPipeline\n\nfrom datasets import load_dataset\nfrom torchvision import transforms\nfrom diffusers import DDPMScheduler\nfrom diffusers import UNet2DModel\ntorch.inference_mode(False)\n\n#import diffusers.models.lora\n\ntorch.load(any1)\n#any1(batch_size=1,num_inference_steps=10,output_type=\"tensor\")"
      ]
    },
    {
      "id": 7,
      "type": "PreviewImage",
      "pos": [
        -4248,
        1760
      ],
      "size": {
        "0": 210,
        "1": 250
      },
      "flags": {},
      "order": 53,
      "mode": 2,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 4
        }
      ],
      "properties": {
        "Node name for S&R": "PreviewImage"
      }
    },
    {
      "id": 11,
      "type": "PreviewImage",
      "pos": [
        -4256,
        2091
      ],
      "size": {
        "0": 210,
        "1": 250
      },
      "flags": {},
      "order": 41,
      "mode": 2,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 7
        }
      ],
      "properties": {
        "Node name for S&R": "PreviewImage"
      }
    },
    {
      "id": 16,
      "type": "PyTorchInferenceNode",
      "pos": [
        -4730,
        2660
      ],
      "size": {
        "0": 292.20001220703125,
        "1": 66
      },
      "flags": {},
      "order": 66,
      "mode": 2,
      "inputs": [
        {
          "name": "model",
          "type": "TORCH_MODEL",
          "link": 12
        },
        {
          "name": "input_data",
          "type": "TORCH_TENSOR",
          "link": 17
        },
        {
          "name": "dataset",
          "type": "TORCH_DATASET",
          "link": null
        }
      ],
      "outputs": [
        {
          "name": "TORCH_TENSOR",
          "type": "TORCH_TENSOR",
          "links": [
            13
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "PyTorchInferenceNode"
      }
    },
    {
      "id": 17,
      "type": "TensorToImage",
      "pos": [
        -4408,
        2658
      ],
      "size": {
        "0": 315,
        "1": 58
      },
      "flags": {},
      "order": 70,
      "mode": 2,
      "inputs": [
        {
          "name": "tensor",
          "type": "TORCH_TENSOR",
          "link": 13
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            14
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "TensorToImage"
      },
      "widgets_values": [
        "BHWC"
      ]
    },
    {
      "id": 26,
      "type": "Tuple to ints",
      "pos": [
        -5800,
        3110
      ],
      "size": {
        "0": 140,
        "1": 50
      },
      "flags": {},
      "order": 43,
      "mode": 0,
      "inputs": [
        {
          "name": "Tuple",
          "type": "TUPLE",
          "link": 34
        }
      ],
      "outputs": [
        {
          "name": "INT",
          "type": "INT",
          "links": [
            29
          ],
          "shape": 3,
          "slot_index": 0
        },
        {
          "name": "INT",
          "type": "INT",
          "links": [
            30
          ],
          "shape": 3,
          "slot_index": 1
        }
      ],
      "properties": {
        "Node name for S&R": "Tuple to ints"
      }
    },
    {
      "id": 14,
      "type": "Tuple",
      "pos": [
        -6340,
        3600
      ],
      "size": {
        "0": 315,
        "1": 106
      },
      "flags": {},
      "order": 3,
      "mode": 2,
      "outputs": [
        {
          "name": "TUPLE",
          "type": "TUPLE",
          "links": [],
          "shape": 3
        }
      ],
      "properties": {
        "Node name for S&R": "Tuple"
      },
      "widgets_values": [
        1,
        1,
        "No"
      ]
    },
    {
      "id": 19,
      "type": "LoadImage",
      "pos": [
        -5980,
        3230
      ],
      "size": {
        "0": 320,
        "1": 310
      },
      "flags": {},
      "order": 4,
      "mode": 0,
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            15
          ],
          "shape": 3,
          "slot_index": 0
        },
        {
          "name": "MASK",
          "type": "MASK",
          "links": null,
          "shape": 3
        }
      ],
      "properties": {
        "Node name for S&R": "LoadImage"
      },
      "widgets_values": [
        "IL_AUTMN__00045_.png",
        "image"
      ]
    },
    {
      "id": 37,
      "type": "Reroute",
      "pos": [
        -4936.5937832919035,
        3056.77217240767
      ],
      "size": [
        75,
        26
      ],
      "flags": {},
      "order": 55,
      "mode": 0,
      "inputs": [
        {
          "name": "",
          "type": "*",
          "link": 41
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "TORCH_MODEL",
          "links": [],
          "slot_index": 0
        }
      ],
      "properties": {
        "showOutputText": false,
        "horizontal": false
      }
    },
    {
      "id": 15,
      "type": "ETK_Tuple",
      "pos": [
        -6283.451859432936,
        2297.575794450285
      ],
      "size": {
        "0": 315,
        "1": 58
      },
      "flags": {},
      "order": 5,
      "mode": 0,
      "outputs": [
        {
          "name": "TUPLE",
          "type": "TUPLE",
          "links": [],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "ETK_Tuple"
      },
      "widgets_values": [
        "(512,512,3)"
      ]
    },
    {
      "id": 43,
      "type": "PreviewImage",
      "pos": [
        -5620,
        4090
      ],
      "size": {
        "0": 210,
        "1": 250
      },
      "flags": {
        "collapsed": true
      },
      "order": 33,
      "mode": 2,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 56
        }
      ],
      "properties": {
        "Node name for S&R": "PreviewImage"
      }
    },
    {
      "id": 45,
      "type": "PreviewImage",
      "pos": [
        -5390,
        3860
      ],
      "size": {
        "0": 210,
        "1": 250
      },
      "flags": {},
      "order": 45,
      "mode": 0,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 58
        }
      ],
      "properties": {
        "Node name for S&R": "PreviewImage"
      }
    },
    {
      "id": 48,
      "type": "ImpactInt",
      "pos": [
        -4631.4890971011355,
        4678.089521813355
      ],
      "size": {
        "0": 315,
        "1": 58
      },
      "flags": {},
      "order": 6,
      "mode": 0,
      "outputs": [
        {
          "name": "INT",
          "type": "INT",
          "links": null,
          "shape": 3
        }
      ],
      "properties": {
        "Node name for S&R": "ImpactInt"
      },
      "widgets_values": [
        0
      ]
    },
    {
      "id": 51,
      "type": "Reroute",
      "pos": [
        -4769.99300625,
        4837.530170625
      ],
      "size": [
        75,
        26
      ],
      "flags": {},
      "order": 7,
      "mode": 0,
      "inputs": [
        {
          "name": "",
          "type": "*",
          "link": null
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "*",
          "links": []
        }
      ],
      "properties": {
        "showOutputText": false,
        "horizontal": false
      }
    },
    {
      "id": 54,
      "type": "ETK_Tuple",
      "pos": [
        -6289.451859432936,
        2172.575794450285
      ],
      "size": {
        "0": 315,
        "1": 58
      },
      "flags": {},
      "order": 8,
      "mode": 0,
      "outputs": [
        {
          "name": "TUPLE",
          "type": "TUPLE",
          "links": [],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "ETK_Tuple"
      },
      "widgets_values": [
        "(512,512,1)"
      ]
    },
    {
      "id": 21,
      "type": "ComfyUIImageToPytorchTENSOR",
      "pos": [
        -5200,
        3230
      ],
      "size": {
        "0": 241.79998779296875,
        "1": 46
      },
      "flags": {},
      "order": 60,
      "mode": 0,
      "inputs": [
        {
          "name": "image",
          "type": "IMAGE",
          "link": 16
        }
      ],
      "outputs": [
        {
          "name": "b,h,w,c",
          "type": "TORCH_TENSOR",
          "links": [
            36
          ],
          "shape": 3,
          "slot_index": 0
        },
        {
          "name": "b,h,w,mean(c)",
          "type": "TORCH_TENSOR",
          "links": [
            17
          ],
          "shape": 3,
          "slot_index": 1
        }
      ],
      "properties": {
        "Node name for S&R": "ComfyUIImageToPytorchTENSOR"
      }
    },
    {
      "id": 50,
      "type": "Integer",
      "pos": [
        -5020,
        4730
      ],
      "size": {
        "0": 315,
        "1": 58
      },
      "flags": {},
      "order": 9,
      "mode": 0,
      "outputs": [
        {
          "name": "INT",
          "type": "INT",
          "links": null,
          "shape": 3
        }
      ],
      "properties": {
        "Node name for S&R": "Integer"
      },
      "widgets_values": [
        1
      ]
    },
    {
      "id": 20,
      "type": "ImageScale",
      "pos": [
        -5560,
        3230
      ],
      "size": {
        "0": 320,
        "1": 130
      },
      "flags": {},
      "order": 54,
      "mode": 0,
      "inputs": [
        {
          "name": "image",
          "type": "IMAGE",
          "link": 15
        },
        {
          "name": "width",
          "type": "INT",
          "link": 29,
          "widget": {
            "name": "width"
          }
        },
        {
          "name": "height",
          "type": "INT",
          "link": 30,
          "widget": {
            "name": "height"
          }
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            16,
            31
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "ImageScale"
      },
      "widgets_values": [
        "nearest-exact",
        128,
        128,
        "center"
      ]
    },
    {
      "id": 66,
      "type": "LoadLatent",
      "pos": [
        -7820,
        3620
      ],
      "size": {
        "0": 315,
        "1": 58
      },
      "flags": {},
      "order": 10,
      "mode": 2,
      "outputs": [
        {
          "name": "LATENT",
          "type": "LATENT",
          "links": null,
          "shape": 3
        }
      ],
      "properties": {
        "Node name for S&R": "LoadLatent"
      },
      "widgets_values": [
        null
      ]
    },
    {
      "id": 65,
      "type": "SaveLatent",
      "pos": [
        -7790,
        3500
      ],
      "size": {
        "0": 315,
        "1": 58
      },
      "flags": {},
      "order": 58,
      "mode": 2,
      "inputs": [
        {
          "name": "samples",
          "type": "LATENT",
          "link": 90
        }
      ],
      "properties": {
        "Node name for S&R": "SaveLatent"
      },
      "widgets_values": [
        "latents/ComfyUI"
      ]
    },
    {
      "id": 68,
      "type": "Reroute",
      "pos": [
        -7584.335159804643,
        3282.536507587839
      ],
      "size": [
        75,
        26
      ],
      "flags": {},
      "order": 48,
      "mode": 2,
      "inputs": [
        {
          "name": "",
          "type": "*",
          "link": 89
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "LATENT",
          "links": [
            90
          ],
          "slot_index": 0
        }
      ],
      "properties": {
        "showOutputText": false,
        "horizontal": false
      }
    },
    {
      "id": 67,
      "type": "VAEEncodeTiled",
      "pos": [
        -7720,
        2960
      ],
      "size": {
        "0": 315,
        "1": 78
      },
      "flags": {},
      "order": 36,
      "mode": 0,
      "inputs": [
        {
          "name": "pixels",
          "type": "IMAGE",
          "link": null
        },
        {
          "name": "vae",
          "type": "VAE",
          "link": 92
        }
      ],
      "outputs": [
        {
          "name": "LATENT",
          "type": "LATENT",
          "links": [],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "VAEEncodeTiled"
      },
      "widgets_values": [
        320
      ]
    },
    {
      "id": 57,
      "type": "VAEEncode",
      "pos": [
        -7840,
        3180
      ],
      "size": {
        "0": 210,
        "1": 46
      },
      "flags": {},
      "order": 35,
      "mode": 2,
      "inputs": [
        {
          "name": "pixels",
          "type": "IMAGE",
          "link": null
        },
        {
          "name": "vae",
          "type": "VAE",
          "link": 74,
          "slot_index": 1
        }
      ],
      "outputs": [
        {
          "name": "LATENT",
          "type": "LATENT",
          "links": [
            89
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "VAEEncode"
      }
    },
    {
      "id": 44,
      "type": "Image Resize",
      "pos": [
        -5720,
        3860
      ],
      "size": {
        "0": 210,
        "1": 180
      },
      "flags": {},
      "order": 34,
      "mode": 0,
      "inputs": [
        {
          "name": "image",
          "type": "IMAGE",
          "link": 57
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            58,
            59,
            95
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "Image Resize"
      },
      "widgets_values": [
        "resize",
        "false",
        "lanczos",
        2,
        512,
        512
      ]
    },
    {
      "id": 62,
      "type": "ComfyUIImageToPytorchTENSOR",
      "pos": [
        -7070,
        3210
      ],
      "size": {
        "0": 241.79998779296875,
        "1": 46
      },
      "flags": {},
      "order": 57,
      "mode": 2,
      "inputs": [
        {
          "name": "image",
          "type": "IMAGE",
          "link": 79
        }
      ],
      "outputs": [
        {
          "name": "b,h,w,c",
          "type": "TORCH_TENSOR",
          "links": [
            81
          ],
          "shape": 3,
          "slot_index": 0
        },
        {
          "name": "b,h,w,mean(c)",
          "type": "TORCH_TENSOR",
          "links": null,
          "shape": 3
        }
      ],
      "properties": {
        "Node name for S&R": "ComfyUIImageToPytorchTENSOR"
      }
    },
    {
      "id": 63,
      "type": "TensorToImage",
      "pos": [
        -6760,
        3200
      ],
      "size": {
        "0": 270,
        "1": 60
      },
      "flags": {},
      "order": 64,
      "mode": 2,
      "inputs": [
        {
          "name": "tensor",
          "type": "TORCH_TENSOR",
          "link": 81
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            82
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "TensorToImage"
      },
      "widgets_values": [
        "BHWC"
      ]
    },
    {
      "id": 70,
      "type": "ComfyUIImageToPytorchTENSOR",
      "pos": [
        -6720,
        3430
      ],
      "size": {
        "0": 230,
        "1": 50
      },
      "flags": {},
      "order": 31,
      "mode": 2,
      "inputs": [
        {
          "name": "image",
          "type": "IMAGE",
          "link": 96
        }
      ],
      "outputs": [
        {
          "name": "b,h,w,c",
          "type": "TORCH_TENSOR",
          "links": [],
          "shape": 3,
          "slot_index": 0
        },
        {
          "name": "b,h,w,mean(c)",
          "type": "TORCH_TENSOR",
          "links": null,
          "shape": 3
        }
      ],
      "properties": {
        "Node name for S&R": "ComfyUIImageToPytorchTENSOR"
      }
    },
    {
      "id": 69,
      "type": "FuncAnysToImage",
      "pos": [
        -7050,
        3430
      ],
      "size": {
        "0": 290,
        "1": 210
      },
      "flags": {},
      "order": 11,
      "mode": 2,
      "inputs": [
        {
          "name": "any1",
          "type": "*",
          "link": null,
          "label": "any1"
        },
        {
          "name": "any2",
          "type": "*",
          "link": null,
          "label": "image_data"
        },
        {
          "name": "any3",
          "type": "*",
          "link": null
        },
        {
          "name": "any4",
          "type": "*",
          "link": null
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            96
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "FuncAnysToImage"
      },
      "widgets_values": [
        "import torch\nd=\"\"\"E:\\\\fractal_maps\\\\e99\"\"\"\ny=torch.load(d+\"\\\\fractals encoded.pt\")\nprint(y.shape)\n\n"
      ]
    },
    {
      "id": 64,
      "type": "PreviewImage",
      "pos": [
        -6400,
        3190
      ],
      "size": {
        "0": 210,
        "1": 250
      },
      "flags": {},
      "order": 69,
      "mode": 2,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 82
        }
      ],
      "properties": {
        "Node name for S&R": "PreviewImage"
      }
    },
    {
      "id": 40,
      "type": "ETK_Tuple",
      "pos": [
        -6299.451859432936,
        2052.575794450285
      ],
      "size": {
        "0": 315,
        "1": 58
      },
      "flags": {},
      "order": 12,
      "mode": 0,
      "outputs": [
        {
          "name": "TUPLE",
          "type": "TUPLE",
          "links": [
            101
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "ETK_Tuple"
      },
      "widgets_values": [
        "(64,64,4)"
      ]
    },
    {
      "id": 42,
      "type": "VideoFramesFolderToImageStack",
      "pos": [
        -6070,
        4080
      ],
      "size": {
        "0": 310,
        "1": 250
      },
      "flags": {},
      "order": 13,
      "mode": 0,
      "outputs": [
        {
          "name": "image_stack",
          "type": "IMAGE",
          "links": [
            56,
            57
          ],
          "shape": 3,
          "slot_index": 0
        },
        {
          "name": "[img_fname]",
          "type": "LIST",
          "links": null,
          "shape": 3
        }
      ],
      "properties": {
        "Node name for S&R": "VideoFramesFolderToImageStack"
      },
      "widgets_values": [
        "E:\\fractal_maps\\e99",
        false,
        "NAME",
        0,
        100,
        1,
        0,
        true
      ]
    },
    {
      "id": 46,
      "type": "ComfyUIImageToPytorchTENSOR",
      "pos": [
        -5410,
        4230
      ],
      "size": {
        "0": 241.79998779296875,
        "1": 46
      },
      "flags": {},
      "order": 46,
      "mode": 0,
      "inputs": [
        {
          "name": "image",
          "type": "IMAGE",
          "link": 59
        }
      ],
      "outputs": [
        {
          "name": "b,h,w,c",
          "type": "TORCH_TENSOR",
          "links": [],
          "shape": 3,
          "slot_index": 0
        },
        {
          "name": "b,h,w,mean(c)",
          "type": "TORCH_TENSOR",
          "links": [],
          "shape": 3,
          "slot_index": 1
        }
      ],
      "properties": {
        "Node name for S&R": "ComfyUIImageToPytorchTENSOR"
      }
    },
    {
      "id": 31,
      "type": "workflow/SampleUnet",
      "pos": [
        -4860,
        3210
      ],
      "size": {
        "0": 380,
        "1": 870
      },
      "flags": {},
      "order": 65,
      "mode": 2,
      "inputs": [
        {
          "name": "model",
          "type": "*",
          "link": 35
        },
        {
          "name": "latent",
          "type": "*",
          "link": 36
        },
        {
          "name": "any3",
          "type": "*",
          "link": null
        },
        {
          "name": "any4",
          "type": "*",
          "link": null
        }
      ],
      "properties": {
        "Node name for S&R": "workflow/SampleUnet"
      },
      "widgets_values": [
        "import torch\nimport diffusers\nfrom diffusers import StableDiffusionPipeline\nfrom diffusers import DDPMPipeline\n\nfrom datasets import load_dataset\nfrom torchvision import transforms\nfrom diffusers import DDPMScheduler\nfrom diffusers import UNet2DModel\nimport os\nos.putenv(\"PYTORCH_CUDA_ALLOC_CONF\",\"expandable_segments:True\") \n\ntorch.inference_mode(False)\nany1=any1.to(torch.float16)\nany2=any2.to(torch.float16)\nany1=any1.to(\"cuda\")\nany2=any2.to(\"cuda\")\n\n\nany2=any2.permute(0,3,1,2)\n\n\n\n#y=any1(any2,timestep=1).sample\n\nfrom diffusers import DDPMPipeline, DDPMScheduler\nsample = any2\n\nnoise_scheduler = DDPMScheduler(\n num_train_timesteps=5, beta_schedule=\"squaredcos_cap_v2\"\n)\n\nfor _, t in enumerate(noise_scheduler.timesteps):\n  with torch.no_grad():\n    residual = any1(sample, t).sample\n    sample = noise_scheduler.step(residual, t, sample).prev_sample\n\ny=sample.permute(0,2,3,1)\n\nprint(y.shape)"
      ]
    },
    {
      "id": 73,
      "type": "FuncAnysToString",
      "pos": [
        -4780,
        4320
      ],
      "size": [
        220,
        160
      ],
      "flags": {},
      "order": 38,
      "mode": 0,
      "inputs": [
        {
          "name": "any1",
          "type": "*",
          "link": 97
        },
        {
          "name": "any2",
          "type": "*",
          "link": null
        },
        {
          "name": "any3",
          "type": "*",
          "link": null
        },
        {
          "name": "any4",
          "type": "*",
          "link": null
        }
      ],
      "outputs": [
        {
          "name": "STRING",
          "type": "STRING",
          "links": [
            99
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "FuncAnysToString"
      },
      "widgets_values": [
        "\nimport torch\nprint(any1.shape)\ny=str(any1.shape)\n"
      ]
    },
    {
      "id": 58,
      "type": "CheckpointLoader|pysssss",
      "pos": [
        -8510,
        3180
      ],
      "size": {
        "0": 460,
        "1": 140
      },
      "flags": {},
      "order": 14,
      "mode": 0,
      "outputs": [
        {
          "name": "MODEL",
          "type": "MODEL",
          "links": null,
          "shape": 3
        },
        {
          "name": "CLIP",
          "type": "CLIP",
          "links": null,
          "shape": 3
        },
        {
          "name": "VAE",
          "type": "VAE",
          "links": [
            74,
            92,
            94
          ],
          "shape": 3,
          "slot_index": 2
        }
      ],
      "properties": {
        "Node name for S&R": "CheckpointLoader|pysssss"
      },
      "widgets_values": [
        {
          "content": "v1-4_512.fe4efff1e1.ckpt",
          "image": null
        },
        "[none]"
      ]
    },
    {
      "id": 49,
      "type": "int _O",
      "pos": [
        -4597.66843625,
        4835.919574921875
      ],
      "size": {
        "0": 320,
        "1": 60
      },
      "flags": {},
      "order": 37,
      "mode": 0,
      "inputs": [
        {
          "name": "int",
          "type": "INT",
          "link": 64,
          "widget": {
            "name": "int"
          },
          "slot_index": 0
        }
      ],
      "outputs": [
        {
          "name": "INT",
          "type": "INT",
          "links": [
            111,
            138
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "int _O"
      },
      "widgets_values": [
        905
      ]
    },
    {
      "id": 39,
      "type": "PreviewImage",
      "pos": [
        -2460,
        2390
      ],
      "size": {
        "0": 430,
        "1": 770
      },
      "flags": {},
      "order": 15,
      "mode": 2,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": null
        }
      ],
      "properties": {
        "Node name for S&R": "PreviewImage"
      }
    },
    {
      "id": 60,
      "type": "FuncAnysToImage",
      "pos": [
        -7410,
        3410
      ],
      "size": {
        "0": 320,
        "1": 510
      },
      "flags": {},
      "order": 47,
      "mode": 2,
      "inputs": [
        {
          "name": "any1",
          "type": "*",
          "link": 94,
          "label": "any1"
        },
        {
          "name": "any2",
          "type": "*",
          "link": 95,
          "label": "image_data"
        },
        {
          "name": "any3",
          "type": "*",
          "link": null
        },
        {
          "name": "any4",
          "type": "*",
          "link": null
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            79
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "FuncAnysToImage"
      },
      "widgets_values": [
        "d=\"\"\"E:\\\\fractal_maps\\\\e99\"\"\"\nimport torch\nprint(any2.shape)\nwith torch.inference_mode(True):\n print(dir(any1.encode))\n y = any1.encode(any2)\n #y = any1.decode(y)\ntorch.save(y,d+\"\\\\fractals encoded.pt\")\nprint(y)\n"
      ]
    },
    {
      "id": 35,
      "type": "TensorToImage",
      "pos": [
        -3582.0790564365243,
        1488.6814142542944
      ],
      "size": {
        "0": 220,
        "1": 60
      },
      "flags": {},
      "order": 40,
      "mode": 2,
      "inputs": [
        {
          "name": "tensor",
          "type": "TORCH_TENSOR",
          "link": 54
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            39,
            116,
            125
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "TensorToImage"
      },
      "widgets_values": [
        "BHWC"
      ]
    },
    {
      "id": 52,
      "type": "PrimitiveNode",
      "pos": [
        -4960,
        4940
      ],
      "size": [
        270,
        80
      ],
      "flags": {},
      "order": 16,
      "mode": 0,
      "outputs": [
        {
          "name": "INT",
          "type": "INT",
          "links": [
            64
          ],
          "slot_index": 0,
          "widget": {
            "name": "int"
          }
        }
      ],
      "properties": {
        "Run widget replace on values": false
      },
      "widgets_values": [
        905,
        "increment"
      ]
    },
    {
      "id": 75,
      "type": "ShowText",
      "pos": [
        -4530,
        4320
      ],
      "size": [
        240,
        80
      ],
      "flags": {},
      "order": 49,
      "mode": 0,
      "inputs": [
        {
          "name": "text",
          "type": "*",
          "link": 99
        }
      ],
      "outputs": [
        {
          "name": "STRING_OUT",
          "type": "STRING",
          "links": [],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "ShowText"
      },
      "widgets_values": [
        "torch.Size([100, 4, 64, 64])"
      ]
    },
    {
      "id": 71,
      "type": "LoadTorchTensor",
      "pos": [
        -5070,
        4320
      ],
      "size": [
        250,
        60
      ],
      "flags": {},
      "order": 17,
      "mode": 0,
      "outputs": [
        {
          "name": "TORCH_TENSOR",
          "type": "TORCH_TENSOR",
          "links": [
            97,
            109,
            112
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "LoadTorchTensor"
      },
      "widgets_values": [
        "E:\\fractal_maps\\e99\\fractals encoded.pt"
      ]
    },
    {
      "id": 78,
      "type": "SliceTensor",
      "pos": [
        -4040,
        3280
      ],
      "size": {
        "0": 315,
        "1": 106
      },
      "flags": {},
      "order": 39,
      "mode": 0,
      "inputs": [
        {
          "name": "input_data",
          "type": "TORCH_TENSOR",
          "link": 112
        }
      ],
      "outputs": [
        {
          "name": "TORCH_TENSOR",
          "type": "TORCH_TENSOR",
          "links": [
            136
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "SliceTensor"
      },
      "widgets_values": [
        "0",
        "4",
        "1"
      ]
    },
    {
      "id": 41,
      "type": "RandomTensor",
      "pos": [
        -3710,
        3000
      ],
      "size": {
        "0": 315,
        "1": 106
      },
      "flags": {},
      "order": 18,
      "mode": 0,
      "outputs": [
        {
          "name": "TORCH_TENSOR",
          "type": "TORCH_TENSOR",
          "links": [],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "RandomTensor"
      },
      "widgets_values": [
        "(3,64,64,4)",
        "torch.float16",
        "randn"
      ]
    },
    {
      "id": 30,
      "type": "Reroute",
      "pos": [
        -5889,
        2303
      ],
      "size": [
        75,
        26
      ],
      "flags": {},
      "order": 32,
      "mode": 0,
      "inputs": [
        {
          "name": "",
          "type": "*",
          "link": 101
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "TUPLE",
          "links": [
            34,
            52
          ],
          "slot_index": 0
        }
      ],
      "properties": {
        "showOutputText": false,
        "horizontal": false
      }
    },
    {
      "id": 92,
      "type": "PreviewImage",
      "pos": [
        -2180,
        4140
      ],
      "size": [
        390,
        790
      ],
      "flags": {},
      "order": 68,
      "mode": 0,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 139
        }
      ],
      "properties": {
        "Node name for S&R": "PreviewImage"
      }
    },
    {
      "id": 91,
      "type": "FuncAnysToImage",
      "pos": [
        -2790,
        4140
      ],
      "size": [
        590,
        780
      ],
      "flags": {},
      "order": 63,
      "mode": 0,
      "inputs": [
        {
          "name": "any1",
          "type": "*",
          "link": 140,
          "label": "model"
        },
        {
          "name": "any2",
          "type": "*",
          "link": null,
          "label": "latent"
        },
        {
          "name": "any3",
          "type": "*",
          "link": null
        },
        {
          "name": "any4",
          "type": "*",
          "link": null
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            139
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "FuncAnysToImage"
      },
      "widgets_values": [
        "import torch\nimport torch.nn.functional as F\n\n# Assuming you have the 'losses' array defined properly\nlosses = any1[1]  # Replace with actual losses array\n\nglobal m, b, height, image_tensor, maxx\n\n# Calculate the maximum y-axis value and number of bars\n\nmaxx = len(losses)\nmaxy = int(maxx/2)\n\n# Calculate the height of each bar in pixels\nmax_loss = max(losses)\nypxperl = maxy / max_loss\n\n# Create an empty black image tensor with dimensions (batch_size, height, width, channels)\nbatch_size = 1\nheight = maxy\nwidth = maxx\nchannels = 3  # Assuming an RGB image\n\nimage_tensor = torch.zeros((batch_size, height, width, channels), dtype=torch.uint8)\n\n# Loop through the losses and draw bars on the image tensor\nfor i, loss in enumerate(losses):\n    bar_height = int(loss * ypxperl)\n    image_tensor[0, height - bar_height:, i, :] = 255  # Set the bar to white\n\n# Calculate the trendline using linear regression\nx_values = torch.arange(maxx).unsqueeze(1).float()\ny_values = torch.tensor(losses).unsqueeze(1).float() * ypxperl\n\n# Fit a linear model (y = mx + b)\nX = torch.cat((x_values, torch.ones_like(x_values)), dim=1)\ncoefficients = torch.linalg.lstsq(X, y_values).solution\nm, b = coefficients[0, 0].item(), coefficients[1, 0].item()\nprint(m,b)\n# Calculate the trendline points\ntrendline_points = [(x, int(m * x + b)) for x in range(maxx)]\n\n# Draw the trendline on the image tensor (green color)\nfor x, y in trendline_points:\n    if 0 <= y < height:\n        try:\n         image_tensor[0, height - y, x, :] = torch.tensor([0,255,0])\n         image_tensor[0, height - y-1, x, :] = 0\n         image_tensor[0, height - y+1, x, :] = 0\n        except:\n         pass\n\n# Convert the image tensor to float and normalize it\nimage_tensor = image_tensor.float() / 255.0\n\ny = image_tensor\n"
      ]
    },
    {
      "id": 84,
      "type": "LoadTorchTensor",
      "pos": [
        -4460,
        3570
      ],
      "size": {
        "0": 250,
        "1": 60
      },
      "flags": {},
      "order": 19,
      "mode": 0,
      "outputs": [
        {
          "name": "TORCH_TENSOR",
          "type": "TORCH_TENSOR",
          "links": [
            126
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "LoadTorchTensor"
      },
      "widgets_values": [
        "E:\\fractal_maps\\e99\\vae_encoded_noise.pt"
      ]
    },
    {
      "id": 34,
      "type": "RandomTensor",
      "pos": [
        -3912.079056436524,
        1488.6814142542944
      ],
      "size": {
        "0": 315,
        "1": 106
      },
      "flags": {},
      "order": 20,
      "mode": 2,
      "outputs": [
        {
          "name": "TORCH_TENSOR",
          "type": "TORCH_TENSOR",
          "links": [
            54
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "RandomTensor"
      },
      "widgets_values": [
        "(1000,512,512,3)",
        "torch.float32",
        "randn"
      ]
    },
    {
      "id": 79,
      "type": "VAEEncode",
      "pos": [
        -3282,
        1489
      ],
      "size": {
        "0": 210,
        "1": 46
      },
      "flags": {},
      "order": 51,
      "mode": 2,
      "inputs": [
        {
          "name": "pixels",
          "type": "IMAGE",
          "link": 116
        },
        {
          "name": "vae",
          "type": "VAE",
          "link": null
        }
      ],
      "outputs": [
        {
          "name": "LATENT",
          "type": "LATENT",
          "links": [],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "VAEEncode"
      }
    },
    {
      "id": 83,
      "type": "ShowText",
      "pos": [
        -2800,
        2520
      ],
      "size": {
        "0": 320,
        "1": 76
      },
      "flags": {},
      "order": 59,
      "mode": 2,
      "inputs": [
        {
          "name": "text",
          "type": "*",
          "link": 121
        }
      ],
      "outputs": [
        {
          "name": "STRING_OUT",
          "type": "STRING",
          "links": null,
          "shape": 3
        }
      ],
      "properties": {
        "Node name for S&R": "ShowText"
      },
      "widgets_values": [
        "torch.Size([1000, 4, 64, 64])"
      ]
    },
    {
      "id": 77,
      "type": "CheckpointLoader|pysssss",
      "pos": [
        -3770,
        2760
      ],
      "size": [
        280,
        120
      ],
      "flags": {},
      "order": 21,
      "mode": 0,
      "outputs": [
        {
          "name": "MODEL",
          "type": "MODEL",
          "links": null,
          "shape": 3
        },
        {
          "name": "CLIP",
          "type": "CLIP",
          "links": null,
          "shape": 3
        },
        {
          "name": "VAE",
          "type": "VAE",
          "links": [
            124,
            137
          ],
          "shape": 3,
          "slot_index": 2
        }
      ],
      "properties": {
        "Node name for S&R": "CheckpointLoader|pysssss"
      },
      "widgets_values": [
        {
          "content": "v1-4_512.fe4efff1e1.ckpt",
          "image": null
        },
        "[none]"
      ]
    },
    {
      "id": 36,
      "type": "PreviewImage",
      "pos": [
        -3180,
        1690
      ],
      "size": {
        "0": 270,
        "1": 330
      },
      "flags": {
        "collapsed": true
      },
      "order": 50,
      "mode": 0,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 39
        }
      ],
      "properties": {
        "Node name for S&R": "PreviewImage"
      }
    },
    {
      "id": 81,
      "type": "FuncAnysToString",
      "pos": [
        -3310,
        2530
      ],
      "size": [
        460,
        560
      ],
      "flags": {},
      "order": 52,
      "mode": 2,
      "inputs": [
        {
          "name": "any1",
          "type": "*",
          "link": 124
        },
        {
          "name": "any2",
          "type": "*",
          "link": 125
        },
        {
          "name": "any3",
          "type": "*",
          "link": null
        },
        {
          "name": "any4",
          "type": "*",
          "link": null
        }
      ],
      "outputs": [
        {
          "name": "STRING",
          "type": "STRING",
          "links": [
            121
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "FuncAnysToString"
      },
      "widgets_values": [
        "import torch\nf= \"\"\"E:\\\\fractal_maps\\\\e99\\\\vae_encoded_noise.pt\"\"\"\nvae = any1\nlatents = any1\n\n\n\nwith torch.inference_mode(True):\n print(dir(any1.encode))\n y = vae.encode(any2)\n\ntorch.save(y,f)\n\ny=[y.shape]\nprint(y)\n"
      ]
    },
    {
      "id": 38,
      "type": "FuncAnysToImage",
      "pos": [
        -4120,
        3550
      ],
      "size": {
        "0": 630,
        "1": 1410
      },
      "flags": {},
      "order": 56,
      "mode": 0,
      "inputs": [
        {
          "name": "any1",
          "type": "*",
          "link": 48,
          "label": "model"
        },
        {
          "name": "any2",
          "type": "*",
          "link": 126,
          "label": "latent",
          "slot_index": 1
        },
        {
          "name": "any3",
          "type": "*",
          "link": 109
        },
        {
          "name": "any4",
          "type": "*",
          "link": 111
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            135,
            140
          ],
          "shape": 3,
          "slot_index": 0,
          "label": "list[model,[loss]]"
        }
      ],
      "properties": {
        "Node name for S&R": "FuncAnysToImage"
      },
      "widgets_values": [
        "import torch\nimport torch.nn.functional as F\nfrom diffusers import DDPMScheduler\nimport torch.utils.data\nimport random\n\n\nbatch_size = 100\nnum_noise_steps = 1000\ntraining_epochs = 500\n\nenc_noise = any2\n\ndv = \"cuda\"\ndt = torch.float32\n\nprint(any3.shape)\nif len(any3.shape) == 4:\n if any3.shape[1]<any3.shape[2]:\n  pass\n else:\n  any3 = any3.permute(0,3,1,2).to(dt).to(\"cpu\")\n\nelse:\n any3 = any3.unsqueeze(-1)\n any3 = any3.permute(0,3,1,2).to(dt).to(\"cpu\")\n\nprint(any3.requires_grad)\n\nmodel = any1.to(dt).to(dv)\ndel any1\ntorch.cuda.empty_cache()\n\n\ndataloader = torch.utils.data.DataLoader(any3, batch_size=batch_size)\n\n\n\nnoise_scheduler = DDPMScheduler(\n    num_train_timesteps=num_noise_steps, beta_schedule=\"squaredcos_cap_v2\"\n)\noptimizer = torch.optim.AdamW(model.parameters(), lr=2.5e-3)\n\n\n\nlosses = []\ntorch.cuda.empty_cache()\n\n\n\nfor epoch in range(training_epochs):\n     for batch_num, batch in enumerate(dataloader):\n         batch=batch.to(dv)\n\n\n         clean_images = batch.to(dv, dtype=dt)\n\n\n         #noise = torch.randn_like(clean_images)\n\n\n         indices = random.sample(range(enc_noise.size(0)), batch_size)\n\n\n         noise  = enc_noise[indices].to(dv)\n\n         timesteps = torch.randint(\n             0, noise_scheduler.num_train_timesteps, (batch_size,), device=dv\n         ).long()\n\n         noisy_images = noise_scheduler.add_noise(clean_images, noise, timesteps)         \n\n         noise_pred = model(noisy_images, timesteps, return_dict=False)[0]\n\n\n         loss = F.mse_loss(noise_pred, noise)\n         #print(1)\n         loss.backward()\n         #print(2)\n         optimizer.step()\n         #print(3)\n         optimizer.zero_grad()\n         #print(4)\n         losses.append(loss.item())\n         print(batch_num,loss.item())\n\n# Compute average loss of the last epoch\n#loss_last_epoch = sum(losses[-len(dataloader):]) / len(dataloader)\n#y= noise_pred.detach()\n#y=y.permute(0,2,3,1)\n#print(y.shape)\ny=[model,losses]\n\ntorch.save(model,\"f_dif.pt\")\nmodel.save_pretrained(\"e:\\\\git\\\\comfyui\\\\f2_dif.pt\")\n"
      ]
    },
    {
      "id": 13,
      "type": "CreateUnet2dModel",
      "pos": [
        -5750,
        2660
      ],
      "size": {
        "0": 355.20001220703125,
        "1": 238
      },
      "flags": {},
      "order": 44,
      "mode": 0,
      "inputs": [
        {
          "name": "sample_size",
          "type": "TUPLE",
          "link": 52,
          "slot_index": 0
        },
        {
          "name": "down_block_types",
          "type": "TUPLE",
          "link": 142,
          "slot_index": 1
        },
        {
          "name": "up_block_types",
          "type": "TUPLE",
          "link": 141
        },
        {
          "name": "block_out_channels",
          "type": "TUPLE",
          "link": 144
        }
      ],
      "outputs": [
        {
          "name": "TORCH_MODEL",
          "type": "TORCH_MODEL",
          "links": [
            12,
            35,
            41,
            48
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "CreateUnet2dModel"
      },
      "widgets_values": [
        "UNet2D",
        4,
        4,
        1,
        1,
        1
      ]
    },
    {
      "id": 86,
      "type": "ETK_Tuple",
      "pos": [
        -6410,
        2530
      ],
      "size": {
        "0": 315,
        "1": 58
      },
      "flags": {},
      "order": 22,
      "mode": 0,
      "outputs": [
        {
          "name": "TUPLE",
          "type": "TUPLE",
          "links": [],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "ETK_Tuple"
      },
      "widgets_values": [
        "(\"AttnDownBlock2D\",)"
      ]
    },
    {
      "id": 87,
      "type": "ETK_Tuple",
      "pos": [
        -6390,
        2660
      ],
      "size": {
        "0": 260,
        "1": 60
      },
      "flags": {},
      "order": 23,
      "mode": 0,
      "outputs": [
        {
          "name": "TUPLE",
          "type": "TUPLE",
          "links": [],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "ETK_Tuple"
      },
      "widgets_values": [
        "(\"AttnUpBlock2D\",)"
      ]
    },
    {
      "id": 88,
      "type": "ETK_Tuple",
      "pos": [
        -6270,
        3070
      ],
      "size": {
        "0": 260,
        "1": 60
      },
      "flags": {},
      "order": 24,
      "mode": 0,
      "outputs": [
        {
          "name": "TUPLE",
          "type": "TUPLE",
          "links": [],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "ETK_Tuple"
      },
      "widgets_values": [
        "(8,)"
      ]
    },
    {
      "id": 25,
      "type": "ETK_Tuple",
      "pos": [
        -6390,
        2760
      ],
      "size": [
        260,
        60
      ],
      "flags": {},
      "order": 25,
      "mode": 0,
      "outputs": [
        {
          "name": "TUPLE",
          "type": "TUPLE",
          "links": [
            141
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "ETK_Tuple"
      },
      "widgets_values": [
        "(\"AttnUpBlock2D\",\"AttnUpBlock2D\",\"UpBlock2D\",\"UpBlock2D\",)"
      ]
    },
    {
      "id": 24,
      "type": "ETK_Tuple",
      "pos": [
        -6410,
        2420
      ],
      "size": {
        "0": 315,
        "1": 58
      },
      "flags": {},
      "order": 26,
      "mode": 0,
      "outputs": [
        {
          "name": "TUPLE",
          "type": "TUPLE",
          "links": [
            142
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "ETK_Tuple"
      },
      "widgets_values": [
        "(\"DownBlock2D\",\"DownBlock2D\",\"AttnDownBlock2D\",\"AttnDownBlock2D\",)"
      ]
    },
    {
      "id": 85,
      "type": "ETK_Tuple",
      "pos": [
        -6270,
        2970
      ],
      "size": [
        260,
        60
      ],
      "flags": {},
      "order": 27,
      "mode": 0,
      "outputs": [
        {
          "name": "TUPLE",
          "type": "TUPLE",
          "links": [],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "ETK_Tuple"
      },
      "widgets_values": [
        "(8,8,8,8)"
      ]
    },
    {
      "id": 29,
      "type": "ETK_Tuple",
      "pos": [
        -6270,
        2870
      ],
      "size": [
        260,
        60
      ],
      "flags": {},
      "order": 28,
      "mode": 0,
      "outputs": [
        {
          "name": "TUPLE",
          "type": "TUPLE",
          "links": [
            144
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "ETK_Tuple"
      },
      "widgets_values": [
        "(16,32,64,128)"
      ]
    },
    {
      "id": 89,
      "type": "FuncAnysToImage",
      "pos": [
        -2790,
        3200
      ],
      "size": [
        490,
        890
      ],
      "flags": {},
      "order": 62,
      "mode": 0,
      "inputs": [
        {
          "name": "any1",
          "type": "*",
          "link": 135,
          "label": "model"
        },
        {
          "name": "any2",
          "type": "*",
          "link": 136,
          "label": "latent"
        },
        {
          "name": "any3",
          "type": "*",
          "link": 137
        },
        {
          "name": "any4",
          "type": "*",
          "link": 138
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            134
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "FuncAnysToImage"
      },
      "widgets_values": [
        "import torch\nimport diffusers\nfrom diffusers import StableDiffusionPipeline\nfrom diffusers import DDPMPipeline\n\nfrom datasets import load_dataset\nfrom torchvision import transforms\nfrom diffusers import DDPMScheduler\nfrom diffusers import UNet2DModel\nfrom diffusers import DDPMPipeline, DDPMScheduler\n\nimport os\n\nvae = any3\nnum_noise_steps = 1000\nos.putenv(\"PYTORCH_CUDA_ALLOC_CONF\",\"expandable_segments:True\") \n\ndt = torch.float32\ndv = \"cuda\"\n\ntorch.inference_mode(False)\n\nlosses=any1[1]\n\nany1=any1.copy()\nany1 = any1[0]\n\nany1=any1.to(dt)\nany2=any2.to(dt)\nany1=any1.to(dv)\nany2=any2.to(dv)\nprint(any2.shape)\n\nif len(any2.shape) ==4:\n if any2.shape[1]<any2.shape[2]:\n  pass\n else:\n  any2 = any2.permute(0,3,1,2).to(dt).to(dv)\nelse:\n any2 = any2.unsqueeze(-1)\n any2 = any2.permute(0,3,1,2).to(dt).to(dv)\n\n#any2=any2.permute(0,3,1,2)\n\n\n\n#y=any1(any2,timestep=1).sample\n\n\nsample = any2.clone()\n\nnoise_scheduler = DDPMScheduler(\n num_train_timesteps=num_noise_steps, beta_schedule=\"squaredcos_cap_v2\"\n)\n\nfor _, t in enumerate(noise_scheduler.timesteps):\n  with torch.no_grad():\n    residual = any1(sample, t).sample\n    sample = noise_scheduler.step(residual, t, sample).prev_sample\n\ny = vae.decode(sample).detach().cpu()\nyy = vae.decode(any2).detach().cpu() \n\ny=torch.cat([y,yy],dim=2)\n\n#y=sample.permute(0,2,3,1)\n#y=torch.cat([y,y,y],dim=3)\n\nprint(\"display\",y.shape)"
      ]
    },
    {
      "id": 90,
      "type": "PreviewImage",
      "pos": [
        -2180,
        3200
      ],
      "size": [
        440,
        890
      ],
      "flags": {},
      "order": 67,
      "mode": 0,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 134
        }
      ],
      "properties": {
        "Node name for S&R": "PreviewImage"
      }
    }
  ],
  "links": [
    [
      2,
      2,
      0,
      5,
      0,
      "DDPM_PL"
    ],
    [
      3,
      5,
      0,
      6,
      0,
      "TORCH_TENSOR"
    ],
    [
      4,
      6,
      0,
      7,
      0,
      "IMAGE"
    ],
    [
      7,
      10,
      0,
      11,
      0,
      "IMAGE"
    ],
    [
      9,
      12,
      0,
      10,
      0,
      "*"
    ],
    [
      12,
      13,
      0,
      16,
      0,
      "TORCH_MODEL"
    ],
    [
      13,
      16,
      0,
      17,
      0,
      "TORCH_TENSOR"
    ],
    [
      14,
      17,
      0,
      18,
      0,
      "IMAGE"
    ],
    [
      15,
      19,
      0,
      20,
      0,
      "IMAGE"
    ],
    [
      16,
      20,
      0,
      21,
      0,
      "IMAGE"
    ],
    [
      17,
      21,
      1,
      16,
      1,
      "TORCH_TENSOR"
    ],
    [
      29,
      26,
      0,
      20,
      1,
      "INT"
    ],
    [
      30,
      26,
      1,
      20,
      2,
      "INT"
    ],
    [
      31,
      20,
      0,
      28,
      0,
      "IMAGE"
    ],
    [
      34,
      30,
      0,
      26,
      0,
      "TUPLE"
    ],
    [
      35,
      13,
      0,
      31,
      0,
      "*"
    ],
    [
      36,
      21,
      0,
      31,
      1,
      "*"
    ],
    [
      39,
      35,
      0,
      36,
      0,
      "IMAGE"
    ],
    [
      41,
      13,
      0,
      37,
      0,
      "*"
    ],
    [
      48,
      13,
      0,
      38,
      0,
      "*"
    ],
    [
      52,
      30,
      0,
      13,
      0,
      "TUPLE"
    ],
    [
      54,
      34,
      0,
      35,
      0,
      "TORCH_TENSOR"
    ],
    [
      56,
      42,
      0,
      43,
      0,
      "IMAGE"
    ],
    [
      57,
      42,
      0,
      44,
      0,
      "IMAGE"
    ],
    [
      58,
      44,
      0,
      45,
      0,
      "IMAGE"
    ],
    [
      59,
      44,
      0,
      46,
      0,
      "IMAGE"
    ],
    [
      64,
      52,
      0,
      49,
      0,
      "INT"
    ],
    [
      74,
      58,
      2,
      57,
      1,
      "VAE"
    ],
    [
      79,
      60,
      0,
      62,
      0,
      "IMAGE"
    ],
    [
      81,
      62,
      0,
      63,
      0,
      "TORCH_TENSOR"
    ],
    [
      82,
      63,
      0,
      64,
      0,
      "IMAGE"
    ],
    [
      89,
      57,
      0,
      68,
      0,
      "*"
    ],
    [
      90,
      68,
      0,
      65,
      0,
      "LATENT"
    ],
    [
      92,
      58,
      2,
      67,
      1,
      "VAE"
    ],
    [
      94,
      58,
      2,
      60,
      0,
      "*"
    ],
    [
      95,
      44,
      0,
      60,
      1,
      "*"
    ],
    [
      96,
      69,
      0,
      70,
      0,
      "IMAGE"
    ],
    [
      97,
      71,
      0,
      73,
      0,
      "*"
    ],
    [
      99,
      73,
      0,
      75,
      0,
      "*"
    ],
    [
      101,
      40,
      0,
      30,
      0,
      "*"
    ],
    [
      109,
      71,
      0,
      38,
      2,
      "*"
    ],
    [
      111,
      49,
      0,
      38,
      3,
      "*"
    ],
    [
      112,
      71,
      0,
      78,
      0,
      "TORCH_TENSOR"
    ],
    [
      116,
      35,
      0,
      79,
      0,
      "IMAGE"
    ],
    [
      121,
      81,
      0,
      83,
      0,
      "*"
    ],
    [
      124,
      77,
      2,
      81,
      0,
      "*"
    ],
    [
      125,
      35,
      0,
      81,
      1,
      "*"
    ],
    [
      126,
      84,
      0,
      38,
      1,
      "*"
    ],
    [
      134,
      89,
      0,
      90,
      0,
      "IMAGE"
    ],
    [
      135,
      38,
      0,
      89,
      0,
      "*"
    ],
    [
      136,
      78,
      0,
      89,
      1,
      "*"
    ],
    [
      137,
      77,
      2,
      89,
      2,
      "*"
    ],
    [
      138,
      49,
      0,
      89,
      3,
      "*"
    ],
    [
      139,
      91,
      0,
      92,
      0,
      "IMAGE"
    ],
    [
      140,
      38,
      0,
      91,
      0,
      "*"
    ],
    [
      141,
      25,
      0,
      13,
      2,
      "TUPLE"
    ],
    [
      142,
      24,
      0,
      13,
      1,
      "TUPLE"
    ],
    [
      144,
      29,
      0,
      13,
      3,
      "TUPLE"
    ]
  ],
  "groups": [],
  "config": {},
  "extra": {
    "groupNodes": {
      "SampleUnet": {
        "nodes": [
          {
            "type": "FuncAnysToImage",
            "pos": [
              -4870,
              3210
            ],
            "size": {
              "0": 520,
              "1": 770
            },
            "flags": {},
            "order": 20,
            "mode": 0,
            "inputs": [
              {
                "name": "any1",
                "type": "*",
                "link": null,
                "label": "model"
              },
              {
                "name": "any2",
                "type": "*",
                "link": null,
                "label": "latent"
              },
              {
                "name": "any3",
                "type": "*",
                "link": null
              },
              {
                "name": "any4",
                "type": "*",
                "link": null
              }
            ],
            "outputs": [
              {
                "name": "IMAGE",
                "type": "IMAGE",
                "links": [],
                "shape": 3,
                "slot_index": 0
              }
            ],
            "properties": {
              "Node name for S&R": "FuncAnysToImage"
            },
            "widgets_values": [
              "import torch\nimport diffusers\nfrom diffusers import StableDiffusionPipeline\nfrom diffusers import DDPMPipeline\n\nfrom datasets import load_dataset\nfrom torchvision import transforms\nfrom diffusers import DDPMScheduler\nfrom diffusers import UNet2DModel\nimport os\nos.putenv(\"PYTORCH_CUDA_ALLOC_CONF\",\"expandable_segments:True\")\n\ntorch.inference_mode(False)\nany1=any1.to(torch.float16)\nany2=any2.to(torch.float16)\nany1=any1.to(\"cuda\")\nany2=any2.to(\"cuda\")\n\n\nany2=any2.permute(0,3,1,2)\n\n\n\n#y=any1(any2,timestep=1).sample\n\nfrom diffusers import DDPMPipeline, DDPMScheduler\nsample = any2\n\nnoise_scheduler = DDPMScheduler(\n num_train_timesteps=10, beta_schedule=\"squaredcos_cap_v2\"\n)\n\nfor _, t in enumerate(noise_scheduler.timesteps):\n  with torch.no_grad():\n    residual = any1(sample, t).sample\n    sample = noise_scheduler.step(residual, t, sample).prev_sample\n\ny=sample.permute(0,2,3,1)\n\nprint(y.shape)"
            ],
            "index": 0
          },
          {
            "type": "PreviewImage",
            "pos": [
              -4270,
              3220
            ],
            "size": {
              "0": 430,
              "1": 770
            },
            "flags": {},
            "order": 22,
            "mode": 0,
            "inputs": [
              {
                "name": "images",
                "type": "IMAGE",
                "link": null
              }
            ],
            "properties": {
              "Node name for S&R": "PreviewImage"
            },
            "index": 1
          }
        ],
        "links": [
          [
            null,
            0,
            0,
            0,
            13,
            "TORCH_MODEL"
          ],
          [
            null,
            0,
            0,
            1,
            21,
            "TORCH_TENSOR"
          ],
          [
            0,
            0,
            1,
            0,
            22,
            "IMAGE"
          ]
        ],
        "external": []
      }
    }
  },
  "version": 0.4
}