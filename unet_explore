{
  "last_node_id": 39,
  "last_link_id": 50,
  "nodes": [
    {
      "id": 1,
      "type": "LoadHFDataset",
      "pos": [
        -5545.7300000000005,
        1961.3799999999997
      ],
      "size": {
        "0": 315,
        "1": 58
      },
      "flags": {},
      "order": 0,
      "mode": 2,
      "outputs": [
        {
          "name": "HF_DATASET",
          "type": "HF_DATASET",
          "links": null,
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "LoadHFDataset"
      },
      "widgets_values": [
        "huggan/smithsonian_butterflies_subset"
      ]
    },
    {
      "id": 12,
      "type": "Text box",
      "pos": [
        -5136.329852294917,
        2102.159926147461
      ],
      "size": {
        "0": 400,
        "1": 200
      },
      "flags": {},
      "order": 1,
      "mode": 2,
      "outputs": [
        {
          "name": "STRING",
          "type": "STRING",
          "links": [
            9
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "Text box"
      },
      "widgets_values": [
        "E:\\story_squad\\sd_class_01\\model.pt"
      ]
    },
    {
      "id": 2,
      "type": "DDPMPipline",
      "pos": [
        -5158.3600000000015,
        1740.4199815368636
      ],
      "size": {
        "0": 315,
        "1": 82
      },
      "flags": {},
      "order": 2,
      "mode": 2,
      "outputs": [
        {
          "name": "DDPM_PL",
          "type": "DDPM_PL",
          "links": [
            2
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "DDPMPipline"
      },
      "widgets_values": [
        "E:\\story_squad\\sd_class_01\\model.pt",
        "cuda"
      ]
    },
    {
      "id": 6,
      "type": "TensorToImage",
      "pos": [
        -4508.3600000000015,
        1740.4199815368636
      ],
      "size": {
        "0": 220,
        "1": 60
      },
      "flags": {},
      "order": 16,
      "mode": 2,
      "inputs": [
        {
          "name": "tensor",
          "type": "TORCH_TENSOR",
          "link": 3
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            4
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "TensorToImage"
      },
      "widgets_values": [
        "BHWC"
      ]
    },
    {
      "id": 18,
      "type": "PreviewImage",
      "pos": [
        -4017.3325156250025,
        2660.947788281249
      ],
      "size": {
        "0": 210,
        "1": 26
      },
      "flags": {},
      "order": 29,
      "mode": 2,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 14
        }
      ],
      "properties": {
        "Node name for S&R": "PreviewImage"
      }
    },
    {
      "id": 5,
      "type": "SampleDDPMPipline",
      "pos": [
        -4758.3600000000015,
        1740.4199815368636
      ],
      "size": {
        "0": 210,
        "1": 82
      },
      "flags": {},
      "order": 11,
      "mode": 2,
      "inputs": [
        {
          "name": "model",
          "type": "DDPM_PL",
          "link": 2
        }
      ],
      "outputs": [
        {
          "name": "TORCH_TENSOR",
          "type": "TORCH_TENSOR",
          "links": [
            3
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "SampleDDPMPipline"
      },
      "widgets_values": [
        2,
        1000
      ]
    },
    {
      "id": 24,
      "type": "ETK_Tuple",
      "pos": [
        -6274.211887418578,
        2655.7109829434485
      ],
      "size": {
        "0": 315,
        "1": 58
      },
      "flags": {},
      "order": 3,
      "mode": 0,
      "outputs": [
        {
          "name": "TUPLE",
          "type": "TUPLE",
          "links": [
            22
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "ETK_Tuple"
      },
      "widgets_values": [
        "(\"DownBlock2D\",\"DownBlock2D\",\"AttnDownBlock2D\",\"AttnDownBlock2D\",)"
      ]
    },
    {
      "id": 28,
      "type": "PreviewImage",
      "pos": [
        -5210,
        3350
      ],
      "size": {
        "0": 210,
        "1": 250
      },
      "flags": {},
      "order": 23,
      "mode": 0,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 31
        }
      ],
      "properties": {
        "Node name for S&R": "PreviewImage"
      }
    },
    {
      "id": 25,
      "type": "ETK_Tuple",
      "pos": [
        -6274.211887418578,
        2765.7109829434485
      ],
      "size": {
        "0": 350,
        "1": 60
      },
      "flags": {},
      "order": 4,
      "mode": 0,
      "outputs": [
        {
          "name": "TUPLE",
          "type": "TUPLE",
          "links": [
            23
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "ETK_Tuple"
      },
      "widgets_values": [
        "(\"AttnUpBlock2D\",\"AttnUpBlock2D\",\"UpBlock2D\",\"UpBlock2D\",)"
      ]
    },
    {
      "id": 29,
      "type": "ETK_Tuple",
      "pos": [
        -6276.030069236758,
        2866.6200738525395
      ],
      "size": {
        "0": 350,
        "1": 60
      },
      "flags": {},
      "order": 5,
      "mode": 0,
      "outputs": [
        {
          "name": "TUPLE",
          "type": "TUPLE",
          "links": [
            32
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "ETK_Tuple"
      },
      "widgets_values": [
        "(8,16,32,64,)"
      ]
    },
    {
      "id": 20,
      "type": "ImageScale",
      "pos": [
        -5560,
        3230
      ],
      "size": {
        "0": 320,
        "1": 130
      },
      "flags": {},
      "order": 21,
      "mode": 0,
      "inputs": [
        {
          "name": "image",
          "type": "IMAGE",
          "link": 15
        },
        {
          "name": "width",
          "type": "INT",
          "link": 29,
          "widget": {
            "name": "width"
          }
        },
        {
          "name": "height",
          "type": "INT",
          "link": 30,
          "widget": {
            "name": "height"
          }
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            16,
            31
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "ImageScale"
      },
      "widgets_values": [
        "nearest-exact",
        128,
        128,
        "center"
      ]
    },
    {
      "id": 10,
      "type": "FuncAnysToImage",
      "pos": [
        -4686.7300000000005,
        2092.38
      ],
      "size": {
        "0": 410,
        "1": 310
      },
      "flags": {},
      "order": 10,
      "mode": 2,
      "inputs": [
        {
          "name": "any1",
          "type": "*",
          "link": 9
        },
        {
          "name": "any2",
          "type": "*",
          "link": null
        },
        {
          "name": "any3",
          "type": "*",
          "link": null
        },
        {
          "name": "any4",
          "type": "*",
          "link": null
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            7
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "FuncAnysToImage"
      },
      "widgets_values": [
        "import torch\nimport diffusers\nfrom diffusers import StableDiffusionPipeline\nfrom diffusers import DDPMPipeline\n\nfrom datasets import load_dataset\nfrom torchvision import transforms\nfrom diffusers import DDPMScheduler\nfrom diffusers import UNet2DModel\ntorch.inference_mode(False)\n\n#import diffusers.models.lora\n\ntorch.load(any1)\n#any1(batch_size=1,num_inference_steps=10,output_type=\"tensor\")"
      ]
    },
    {
      "id": 7,
      "type": "PreviewImage",
      "pos": [
        -4248,
        1760
      ],
      "size": {
        "0": 210,
        "1": 250
      },
      "flags": {},
      "order": 20,
      "mode": 2,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 4
        }
      ],
      "properties": {
        "Node name for S&R": "PreviewImage"
      }
    },
    {
      "id": 11,
      "type": "PreviewImage",
      "pos": [
        -4256,
        2091
      ],
      "size": {
        "0": 210,
        "1": 250
      },
      "flags": {},
      "order": 15,
      "mode": 2,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 7
        }
      ],
      "properties": {
        "Node name for S&R": "PreviewImage"
      }
    },
    {
      "id": 15,
      "type": "ETK_Tuple",
      "pos": [
        -6274,
        2555
      ],
      "size": {
        "0": 315,
        "1": 58
      },
      "flags": {},
      "order": 6,
      "mode": 0,
      "outputs": [
        {
          "name": "TUPLE",
          "type": "TUPLE",
          "links": [
            11,
            33
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "ETK_Tuple"
      },
      "widgets_values": [
        "(512,512,3)"
      ]
    },
    {
      "id": 30,
      "type": "Reroute",
      "pos": [
        -5880,
        2560
      ],
      "size": [
        75,
        26
      ],
      "flags": {},
      "order": 13,
      "mode": 0,
      "inputs": [
        {
          "name": "",
          "type": "*",
          "link": 33
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "TUPLE",
          "links": [
            34
          ],
          "slot_index": 0
        }
      ],
      "properties": {
        "showOutputText": false,
        "horizontal": false
      }
    },
    {
      "id": 16,
      "type": "PyTorchInferenceNode",
      "pos": [
        -4730,
        2660
      ],
      "size": {
        "0": 292.20001220703125,
        "1": 66
      },
      "flags": {},
      "order": 26,
      "mode": 2,
      "inputs": [
        {
          "name": "model",
          "type": "TORCH_MODEL",
          "link": 12
        },
        {
          "name": "input_data",
          "type": "TORCH_TENSOR",
          "link": 17
        },
        {
          "name": "dataset",
          "type": "TORCH_DATASET",
          "link": null
        }
      ],
      "outputs": [
        {
          "name": "TORCH_TENSOR",
          "type": "TORCH_TENSOR",
          "links": [
            13
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "PyTorchInferenceNode"
      }
    },
    {
      "id": 17,
      "type": "TensorToImage",
      "pos": [
        -4408,
        2658
      ],
      "size": {
        "0": 315,
        "1": 58
      },
      "flags": {},
      "order": 28,
      "mode": 2,
      "inputs": [
        {
          "name": "tensor",
          "type": "TORCH_TENSOR",
          "link": 13
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            14
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "TensorToImage"
      },
      "widgets_values": [
        "BHWC"
      ]
    },
    {
      "id": 26,
      "type": "Tuple to ints",
      "pos": [
        -5800,
        3110
      ],
      "size": [
        140,
        50
      ],
      "flags": {},
      "order": 18,
      "mode": 0,
      "inputs": [
        {
          "name": "Tuple",
          "type": "TUPLE",
          "link": 34
        }
      ],
      "outputs": [
        {
          "name": "INT",
          "type": "INT",
          "links": [
            29
          ],
          "shape": 3,
          "slot_index": 0
        },
        {
          "name": "INT",
          "type": "INT",
          "links": [
            30
          ],
          "shape": 3,
          "slot_index": 1
        }
      ],
      "properties": {
        "Node name for S&R": "Tuple to ints"
      }
    },
    {
      "id": 14,
      "type": "Tuple",
      "pos": [
        -6340,
        3600
      ],
      "size": {
        "0": 315,
        "1": 106
      },
      "flags": {},
      "order": 7,
      "mode": 2,
      "outputs": [
        {
          "name": "TUPLE",
          "type": "TUPLE",
          "links": [],
          "shape": 3
        }
      ],
      "properties": {
        "Node name for S&R": "Tuple"
      },
      "widgets_values": [
        1,
        1,
        "No"
      ]
    },
    {
      "id": 19,
      "type": "LoadImage",
      "pos": [
        -5980,
        3230
      ],
      "size": {
        "0": 320,
        "1": 310
      },
      "flags": {},
      "order": 8,
      "mode": 0,
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            15
          ],
          "shape": 3,
          "slot_index": 0
        },
        {
          "name": "MASK",
          "type": "MASK",
          "links": null,
          "shape": 3
        }
      ],
      "properties": {
        "Node name for S&R": "LoadImage"
      },
      "widgets_values": [
        "IL_AUTMN__00045_.png",
        "image"
      ]
    },
    {
      "id": 31,
      "type": "workflow/SampleUnet",
      "pos": [
        -4870,
        3210
      ],
      "size": [
        380,
        870
      ],
      "flags": {},
      "order": 24,
      "mode": 0,
      "inputs": [
        {
          "name": "model",
          "type": "*",
          "link": 35
        },
        {
          "name": "latent",
          "type": "*",
          "link": 36
        },
        {
          "name": "any3",
          "type": "*",
          "link": null
        },
        {
          "name": "any4",
          "type": "*",
          "link": null
        }
      ],
      "properties": {
        "Node name for S&R": "workflow/SampleUnet"
      },
      "widgets_values": [
        "import torch\nimport diffusers\nfrom diffusers import StableDiffusionPipeline\nfrom diffusers import DDPMPipeline\n\nfrom datasets import load_dataset\nfrom torchvision import transforms\nfrom diffusers import DDPMScheduler\nfrom diffusers import UNet2DModel\nimport os\nos.putenv(\"PYTORCH_CUDA_ALLOC_CONF\",\"expandable_segments:True\") \n\ntorch.inference_mode(False)\nany1=any1.to(torch.float16)\nany2=any2.to(torch.float16)\nany1=any1.to(\"cuda\")\nany2=any2.to(\"cuda\")\n\n\nany2=any2.permute(0,3,1,2)\n\n\n\n#y=any1(any2,timestep=1).sample\n\nfrom diffusers import DDPMPipeline, DDPMScheduler\nsample = any2\n\nnoise_scheduler = DDPMScheduler(\n num_train_timesteps=5, beta_schedule=\"squaredcos_cap_v2\"\n)\n\nfor _, t in enumerate(noise_scheduler.timesteps):\n  with torch.no_grad():\n    residual = any1(sample, t).sample\n    sample = noise_scheduler.step(residual, t, sample).prev_sample\n\ny=sample.permute(0,2,3,1)\n\nprint(y.shape)"
      ]
    },
    {
      "id": 34,
      "type": "RandomTensor",
      "pos": [
        -4445.290000000001,
        2846.865
      ],
      "size": {
        "0": 315,
        "1": 106
      },
      "flags": {},
      "order": 9,
      "mode": 0,
      "outputs": [
        {
          "name": "TORCH_TENSOR",
          "type": "TORCH_TENSOR",
          "links": [
            38
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "RandomTensor"
      },
      "widgets_values": [
        "(10,512,512,3)",
        "torch.float16",
        "randn"
      ]
    },
    {
      "id": 36,
      "type": "PreviewImage",
      "pos": [
        -3420,
        2680
      ],
      "size": [
        270,
        330
      ],
      "flags": {},
      "order": 19,
      "mode": 0,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 39
        }
      ],
      "properties": {
        "Node name for S&R": "PreviewImage"
      }
    },
    {
      "id": 35,
      "type": "TensorToImage",
      "pos": [
        -4105.290000000001,
        2846.865
      ],
      "size": [
        220,
        60
      ],
      "flags": {},
      "order": 14,
      "mode": 0,
      "inputs": [
        {
          "name": "tensor",
          "type": "TORCH_TENSOR",
          "link": 38
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            39,
            50
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "TensorToImage"
      },
      "widgets_values": [
        "BHWC"
      ]
    },
    {
      "id": 37,
      "type": "Reroute",
      "pos": [
        -4936.5937832919035,
        3056.77217240767
      ],
      "size": [
        75,
        26
      ],
      "flags": {},
      "order": 17,
      "mode": 0,
      "inputs": [
        {
          "name": "",
          "type": "*",
          "link": 41
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "TORCH_MODEL",
          "links": [],
          "slot_index": 0
        }
      ],
      "properties": {
        "showOutputText": false,
        "horizontal": false
      }
    },
    {
      "id": 13,
      "type": "CreateUnet2dModel",
      "pos": [
        -5750,
        2660
      ],
      "size": {
        "0": 355.20001220703125,
        "1": 238
      },
      "flags": {},
      "order": 12,
      "mode": 0,
      "inputs": [
        {
          "name": "sample_size",
          "type": "TUPLE",
          "link": 11,
          "slot_index": 0
        },
        {
          "name": "down_block_types",
          "type": "TUPLE",
          "link": 22,
          "slot_index": 1
        },
        {
          "name": "up_block_types",
          "type": "TUPLE",
          "link": 23
        },
        {
          "name": "block_out_channels",
          "type": "TUPLE",
          "link": 32
        }
      ],
      "outputs": [
        {
          "name": "TORCH_MODEL",
          "type": "TORCH_MODEL",
          "links": [
            12,
            35,
            41,
            48
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "CreateUnet2dModel"
      },
      "widgets_values": [
        "UNet2D",
        3,
        3,
        2,
        1,
        0.5
      ]
    },
    {
      "id": 21,
      "type": "ComfyUIImageToPytorchTENSOR",
      "pos": [
        -5210,
        3230
      ],
      "size": {
        "0": 241.79998779296875,
        "1": 46
      },
      "flags": {},
      "order": 22,
      "mode": 0,
      "inputs": [
        {
          "name": "image",
          "type": "IMAGE",
          "link": 16
        }
      ],
      "outputs": [
        {
          "name": "b,h,w,c",
          "type": "TORCH_TENSOR",
          "links": [
            36,
            49
          ],
          "shape": 3,
          "slot_index": 0
        },
        {
          "name": "b,h,w,mean(c)",
          "type": "TORCH_TENSOR",
          "links": [
            17
          ],
          "shape": 3,
          "slot_index": 1
        }
      ],
      "properties": {
        "Node name for S&R": "ComfyUIImageToPytorchTENSOR"
      }
    },
    {
      "id": 39,
      "type": "PreviewImage",
      "pos": [
        -3480,
        3090
      ],
      "size": {
        "0": 430,
        "1": 770
      },
      "flags": {},
      "order": 27,
      "mode": 0,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 47
        }
      ],
      "properties": {
        "Node name for S&R": "PreviewImage"
      }
    },
    {
      "id": 38,
      "type": "FuncAnysToImage",
      "pos": [
        -4080,
        3080
      ],
      "size": [
        560,
        1070
      ],
      "flags": {},
      "order": 25,
      "mode": 0,
      "inputs": [
        {
          "name": "any1",
          "type": "*",
          "link": 48,
          "label": "model"
        },
        {
          "name": "any2",
          "type": "*",
          "link": 49,
          "label": "latent"
        },
        {
          "name": "any3",
          "type": "*",
          "link": 50
        },
        {
          "name": "any4",
          "type": "*",
          "link": null
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            47
          ],
          "shape": 3,
          "slot_index": 0
        }
      ],
      "properties": {
        "Node name for S&R": "FuncAnysToImage"
      },
      "widgets_values": [
        "import torch\nimport diffusers\nfrom diffusers import StableDiffusionPipeline\nfrom diffusers import DDPMPipeline\n\nfrom datasets import load_dataset\nfrom torchvision import transforms\nfrom diffusers import DDPMScheduler\nfrom diffusers import UNet2DModel\nimport os\nos.putenv(\"PYTORCH_CUDA_ALLOC_CONF\",\"expandable_segments:True\") \n\ntorch.inference_mode(False)\nany1=any1.to(torch.float16)\nany2=any2.to(torch.float16)\nany1=any1.to(\"cuda\")\nany2=any2.to(\"cuda\")\n\nbatch_size = 3\ntraining_epochs=1\nnum_noise_steps=10\ndataloader = any3\nmodel = any1\ndevice = \"cuda\"\ndtype = torch.float16\n\n\nany3=any3.permute(0,3,1,2)\ndataloader = torch.utils.data.DataLoader(\n                any3, batch_size \n            )\nprint(dataloader)\n\n\n\nimport torch.nn.functional as F\nimport numpy as np\n\nfrom diffusers import UNet2DModel, DDPMScheduler\n\n\nnoise_scheduler = DDPMScheduler(\n    num_train_timesteps=num_noise_steps, beta_schedule=\"squaredcos_cap_v2\"\n)\n\n\n\noptimizer = torch.optim.AdamW(model.parameters(), lr=4e-4)\n\n\nlosses = []\n\n\nfor epoch in range(training_epochs):\n    print(f'Epoch {epoch}')\n    for batch_num, batch in enumerate(dataloader):\n        print(batch)\n\n        clean_images = batch.to(device)\n\n        noise = torch.randn(clean_images.shape).to(clean_images.device).to(dtype)\n        bs = clean_images.shape[0]\n\n\n        timesteps = torch.randint(\n            0, noise_scheduler.num_train_timesteps, (bs,), device=clean_images.device\n        ).long()\n\n\n        noisy_images = noise_scheduler.add_noise(clean_images, noise, timesteps)\n\n\n        noise_pred = model(noisy_images, timesteps, return_dict=False)[0]\n\n\n        loss = F.mse_loss(noise_pred, noise)\n        loss.backward(loss)\n        losses.append(loss.item())\n\n\n        self.optimizer.step()\n        self.optimizer.zero_grad()\n        loss_last_epoch = sum(losses[-len(self.dataloader):]) / len(self.dataloader)\n#        self.loss_last_epoch = loss_last_epoch\n\n"
      ]
    }
  ],
  "links": [
    [
      2,
      2,
      0,
      5,
      0,
      "DDPM_PL"
    ],
    [
      3,
      5,
      0,
      6,
      0,
      "TORCH_TENSOR"
    ],
    [
      4,
      6,
      0,
      7,
      0,
      "IMAGE"
    ],
    [
      7,
      10,
      0,
      11,
      0,
      "IMAGE"
    ],
    [
      9,
      12,
      0,
      10,
      0,
      "*"
    ],
    [
      11,
      15,
      0,
      13,
      0,
      "TUPLE"
    ],
    [
      12,
      13,
      0,
      16,
      0,
      "TORCH_MODEL"
    ],
    [
      13,
      16,
      0,
      17,
      0,
      "TORCH_TENSOR"
    ],
    [
      14,
      17,
      0,
      18,
      0,
      "IMAGE"
    ],
    [
      15,
      19,
      0,
      20,
      0,
      "IMAGE"
    ],
    [
      16,
      20,
      0,
      21,
      0,
      "IMAGE"
    ],
    [
      17,
      21,
      1,
      16,
      1,
      "TORCH_TENSOR"
    ],
    [
      22,
      24,
      0,
      13,
      1,
      "TUPLE"
    ],
    [
      23,
      25,
      0,
      13,
      2,
      "TUPLE"
    ],
    [
      29,
      26,
      0,
      20,
      1,
      "INT"
    ],
    [
      30,
      26,
      1,
      20,
      2,
      "INT"
    ],
    [
      31,
      20,
      0,
      28,
      0,
      "IMAGE"
    ],
    [
      32,
      29,
      0,
      13,
      3,
      "TUPLE"
    ],
    [
      33,
      15,
      0,
      30,
      0,
      "*"
    ],
    [
      34,
      30,
      0,
      26,
      0,
      "TUPLE"
    ],
    [
      35,
      13,
      0,
      31,
      0,
      "*"
    ],
    [
      36,
      21,
      0,
      31,
      1,
      "*"
    ],
    [
      38,
      34,
      0,
      35,
      0,
      "TORCH_TENSOR"
    ],
    [
      39,
      35,
      0,
      36,
      0,
      "IMAGE"
    ],
    [
      41,
      13,
      0,
      37,
      0,
      "*"
    ],
    [
      47,
      38,
      0,
      39,
      0,
      "IMAGE"
    ],
    [
      48,
      13,
      0,
      38,
      0,
      "*"
    ],
    [
      49,
      21,
      0,
      38,
      1,
      "*"
    ],
    [
      50,
      35,
      0,
      38,
      2,
      "*"
    ]
  ],
  "groups": [],
  "config": {},
  "extra": {
    "groupNodes": {
      "SampleUnet": {
        "nodes": [
          {
            "type": "FuncAnysToImage",
            "pos": [
              -4870,
              3210
            ],
            "size": {
              "0": 520,
              "1": 770
            },
            "flags": {},
            "order": 20,
            "mode": 0,
            "inputs": [
              {
                "name": "any1",
                "type": "*",
                "link": null,
                "label": "model"
              },
              {
                "name": "any2",
                "type": "*",
                "link": null,
                "label": "latent"
              },
              {
                "name": "any3",
                "type": "*",
                "link": null
              },
              {
                "name": "any4",
                "type": "*",
                "link": null
              }
            ],
            "outputs": [
              {
                "name": "IMAGE",
                "type": "IMAGE",
                "links": [],
                "shape": 3,
                "slot_index": 0
              }
            ],
            "properties": {
              "Node name for S&R": "FuncAnysToImage"
            },
            "widgets_values": [
              "import torch\nimport diffusers\nfrom diffusers import StableDiffusionPipeline\nfrom diffusers import DDPMPipeline\n\nfrom datasets import load_dataset\nfrom torchvision import transforms\nfrom diffusers import DDPMScheduler\nfrom diffusers import UNet2DModel\nimport os\nos.putenv(\"PYTORCH_CUDA_ALLOC_CONF\",\"expandable_segments:True\")\n\ntorch.inference_mode(False)\nany1=any1.to(torch.float16)\nany2=any2.to(torch.float16)\nany1=any1.to(\"cuda\")\nany2=any2.to(\"cuda\")\n\n\nany2=any2.permute(0,3,1,2)\n\n\n\n#y=any1(any2,timestep=1).sample\n\nfrom diffusers import DDPMPipeline, DDPMScheduler\nsample = any2\n\nnoise_scheduler = DDPMScheduler(\n num_train_timesteps=10, beta_schedule=\"squaredcos_cap_v2\"\n)\n\nfor _, t in enumerate(noise_scheduler.timesteps):\n  with torch.no_grad():\n    residual = any1(sample, t).sample\n    sample = noise_scheduler.step(residual, t, sample).prev_sample\n\ny=sample.permute(0,2,3,1)\n\nprint(y.shape)"
            ],
            "index": 0
          },
          {
            "type": "PreviewImage",
            "pos": [
              -4270,
              3220
            ],
            "size": {
              "0": 430,
              "1": 770
            },
            "flags": {},
            "order": 22,
            "mode": 0,
            "inputs": [
              {
                "name": "images",
                "type": "IMAGE",
                "link": null
              }
            ],
            "properties": {
              "Node name for S&R": "PreviewImage"
            },
            "index": 1
          }
        ],
        "links": [
          [
            null,
            0,
            0,
            0,
            13,
            "TORCH_MODEL"
          ],
          [
            null,
            0,
            0,
            1,
            21,
            "TORCH_TENSOR"
          ],
          [
            0,
            0,
            1,
            0,
            22,
            "IMAGE"
          ]
        ],
        "external": []
      }
    }
  },
  "version": 0.4
}